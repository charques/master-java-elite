<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- The pom builds the web WAR artifact. -->

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>edu.masterjava.spring.tarea02</groupId>
		<artifactId>tarea04</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>CU053_Spring_02_04_Web</artifactId>
	<packaging>war</packaging>

	<name>CU053_Spring_02_04_Web</name>
	<description>CU053_Spring_02_04_Web</description>

	<dependencies>

		<!-- Import the ejb project so that the JSF managed bean can use the EJB -->
		<dependency>
			<groupId>edu.masterjava.spring.tarea02</groupId>
			<artifactId>CU053_Spring_02_04_Ejb</artifactId>
			<type>ejb</type>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB 3.1 API, we use runtime scope because we aren't using 
			any direct reference to EJB spec API in our client code -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- JBoss EJB client API jar. We use runtime scope because the EJB client 
			API isn't directly used in this example. We just need it in our runtime classpath -->
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb-client</artifactId>
			<scope>runtime</scope>
			<version>1.0.16.Final</version>
		</dependency>

		<!-- client communications with the server use XNIO -->
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-api</artifactId>
			<scope>runtime</scope>
			<version>3.0.7.GA</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-nio</artifactId>
			<scope>runtime</scope>
			<version>3.0.7.GA</version>
		</dependency>

		<!-- The client needs JBoss remoting to access the server -->
		<dependency>
			<groupId>org.jboss.remoting3</groupId>
			<artifactId>jboss-remoting</artifactId>
			<scope>runtime</scope>
			<version>3.2.14.GA</version>
		</dependency>

		<!-- Remote EJB accesses can be secured -->
		<dependency>
			<groupId>org.jboss.sasl</groupId>
			<artifactId>jboss-sasl</artifactId>
			<scope>runtime</scope>
			<version>1.0.3.Final</version>
		</dependency>

		<!-- data serialization for invoking remote EJBs -->

		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling</artifactId>
			<scope>runtime</scope>
			<version>1.3.16.GA</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-river</artifactId>
			<scope>runtime</scope>
			<version>1.3.16.GA</version>
		</dependency>

		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0-alpha-1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>

	</dependencies>

	<build>
		<!-- Set the name of the war, used as the context root when the app is 
			deployed -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>

